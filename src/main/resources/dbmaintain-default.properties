#######################################
# Default configuration of DbMaintain #
#######################################

# This file contains default configuration values for dbmaintain. This file should not be edited.
# All properties in this file can be overridden, either in the project specific properties file
# (dbmaintain.properties) or in the local properties file (configured by dbmaintain.configuration.customFileName).

# Name or path of the project specific properties file. The system will try to find this file in the classpath (recommended),
# the user home folder or the local filesystem
dbmaintain.configuration.customFileName=dbmaintain.properties

# Name or path of the user specific properties file. This file may contain the necessary parameters to connect to the
# developer's own test schema. It is recommended to override the name of this file in the project specific properties
# file, to include the name of the project. The system will try to find this file in the classpath, the user home folder
# (recommended) or the local filesystem.
dbmaintain.configuration.localFileName=dbmaintain-local.properties

### Database connections ###

# A list of logical names for the different configured databases, separated by comma's. If there's 
# just one database, this property is not required. If names are listed, these names must be used
# in the names of the properties that define the database connection parameters. 
databases.names=

# Properties that define the connection parameters to the database. If there are multiple databases,
# you have to specify the names of these databases in the property names. E.g. if database.names=abc,def
# you must define the properties database.abc.url and database.def.url. If there's only one database,
# database.names can be omitted and you simply define the property database.url. 
database.driverClassName=
database.url=
database.userName=
database.password=

# This property specifies the underlying DBMS implementation. Supported values are 'oracle', 'db2', 'mysql', 'hsqldb',
# 'postgresql', 'derby' and 'mssql'. The value of this property defines which vendor specific implementations of
# DbSupport and ConstraintsDisabler are chosen.
database.dialect=

# A comma-separated list of all used database schemas. The first schema name is the default one, if no schema name is
# specified in for example a dbunit data set, this default one is used.
# A schema name is case sensitive if it's surrounded by database identifier quotes (eg " for oracle)
database.schemaNames=


### DbMaintainer configuration ###

# Indicates the database must be recreated from scratch when an already executed script is updated. If false, the
# DBMaintainer will give an error when an existing script is updated.
dbMaintainer.fromScratch.enabled=true
# Indicates whether a from scratch update should be performed when the previous update failed, but
# none of the scripts were modified since that last update. If false a new update will be tried only when
# changes were made to the script files.
dbMaintainer.keepRetryingAfterError.enabled=false

## Full qualified class name of an implementation of org.dbmaintain.dbsupport.DbSupportFactory. This class is used to create DbSupport instances that provide
# a connection to a database.
org.dbmaintain.dbsupport.DbSupportFactory.implClassName=org.dbmaintain.dbsupport.DefaultDbSupportFactory

# Fully qualified classnames of implementations of org.dbmaintain.dbsupport.DbSupport.
org.dbmaintain.dbsupport.DbSupport.implClassName.oracle=org.dbmaintain.dbsupport.OracleDbSupport
org.dbmaintain.dbsupport.DbSupport.implClassName.oracle9=org.dbmaintain.dbsupport.Oracle9DbSupport
org.dbmaintain.dbsupport.DbSupport.implClassName.oracle10=org.dbmaintain.dbsupport.Oracle10DbSupport
org.dbmaintain.dbsupport.DbSupport.implClassName.hsqldb=org.dbmaintain.dbsupport.HsqldbDbSupport
org.dbmaintain.dbsupport.DbSupport.implClassName.mysql=org.dbmaintain.dbsupport.MySqlDbSupport
org.dbmaintain.dbsupport.DbSupport.implClassName.db2=org.dbmaintain.dbsupport.Db2DbSupport
org.dbmaintain.dbsupport.DbSupport.implClassName.postgresql=org.dbmaintain.dbsupport.PostgreSqlDbSupport
org.dbmaintain.dbsupport.DbSupport.implClassName.derby=org.dbmaintain.dbsupport.DerbyDbSupport
org.dbmaintain.dbsupport.DbSupport.implClassName.mssql=org.dbmaintain.dbsupport.MsSqlDbSupport


# Determines how the database stores non-quoted identifiers (with identifiers, we mean names for tables, columns, etc.) 
# Possible values are lower_case, upper_case, mixed_case and auto
# If auto is specified, the database metadata is used to determine the correct value
database.storedIndentifierCase.oracle=auto
database.storedIndentifierCase.hsqldb=auto
database.storedIndentifierCase.mysql=auto
database.storedIndentifierCase.db2=auto
database.storedIndentifierCase.postgresql=auto
database.storedIndentifierCase.derby=auto
database.storedIndentifierCase.mssql=auto

# Determines the string the database uses to quote identifiers, i.e. make them case-sensitive 
# (with identifiers, we mean names for tables, columns, etc.)
# Leave empty if quoting is not supported.
# If auto is specified, the database metadata is used to determine the correct value
database.identifierQuoteString.oracle=auto
database.identifierQuoteString.hsqldb=auto
database.identifierQuoteString.mysql=auto
database.identifierQuoteString.db2=auto
database.identifierQuoteString.postgresql=auto
database.identifierQuoteString.derby=auto
database.identifierQuoteString.mssql=auto


# Fully qualified name of the implementation of org.dbmaintain.version.ExecutedScriptInfoSource that is used.
org.dbmaintain.version.ExecutedScriptInfoSource.implClassName=org.dbmaintain.version.impl.DefaultExecutedScriptInfoSource
# Name of the table that contains the database update script that have already been executed on the database.
dbMaintainer.executedScriptsTableName=db_executed_scripts
# Name of the column in which the name of the executed script file is stored
dbMaintainer.fileNameColumnName=file_name
dbMaintainer.fileNameColumnSize=150
# Name of the column in which the version index string of the executed script is stored.
dbMaintainer.versionColumnName=version
dbMaintainer.versionColumnSize=25
# Name of the column in which the last modification date of the executed script file is stored.
dbMaintainer.fileLastModifiedAtColumnName=file_last_modified_at
# Name of the column in which the checksum of the content of the script is stored.
dbMaintainer.checksumColumnName=checksum
dbMaintainer.checksumColumnSize=50
# Name of the column that stores the timestamp at which the script was executed
dbMaintainer.executedAtColumnName=executed_at
dbMaintainer.executedAtColumnSize=20
# Name of the column in which is stored whether the script ran without error or not.
dbMaintainer.succeededColumnName=succeeded
# Set to true if the executed scripts table should be created automatically if it does not exist yet.
# If false, an exception is thrown the it does not exist yet, showing how to create the table manually. 
# This is set to false by default to be sure that a non-test schema is dropped by accident. If an executed 
# scripts table is available, we assume it to be a test schema, if not, you should manually add an executed 
# scripts table to indicate that it is a test database schema.
dbMaintainer.autoCreateExecutedScriptsTable=false
dbMaintainer.timestampFormat=yyyy-MM-dd HH:mm:ss

# Fully qualified name of the implementation of org.dbmaintain.script.ScriptSource that is used.
# The default value is 'org.dbmaintain.maintainer.FileScriptSource', which will retrieve the scripts
# from the local file system.
org.dbmaintain.script.ScriptSource.implClassName=org.dbmaintain.script.impl.DefaultScriptSource
# Comma separated list of directories in which the database update scripts are located. Directories in this
# list are recursively searched for files.
dbMaintainer.script.locations=
# Extension of the files containing the database update scripts
dbMaintainer.script.fileExtensions=sql,ddl
# Comma separated list of directories and files in which the post processing database scripts are
# located. Directories in this list are recursively search for files.
dbMaintainer.postProcessingScript.directoryName=postprocessing
dbMaintainer.script.encoding=ISO-8859-1
dbMaintainer.script.targetDatabase.prefix=@

# Defines whether script last modification dates can be used to decide that it didn't change. If set to true,
# the dbmaintainer will decide that a file didn't change since the last time if it's last modification date hasn't
# changed. If it did change, it will first calculate the checksum of the file to verify that the content really
# changed. Setting this property to true improves performance: if set to false the checksum of every script must
# be calculated for each run of the dbmaintainer. It's advised to set this property to true when using the dbmainainer
# to update a unit test database. For applying changes to an environment that can only be updated incrementally (e.g. 
# a database use by testers or even the production database), this parameter should be false, since working with last 
# modification dates is not guaranteed to be 100% bulletproof (although unlikely, it is possible that a different 
# version of the same file is checked out on different systems on exactly the same time).
dbMaintainer.useScriptFileLastModificationDates.enabled=true

# Fully qualified name of the implementation of org.dbmaintain.script.ScriptRunner that is used. The
# default value is 'org.dbmaintain.script.SQLScriptRunner', which executes a regular SQL script.
org.dbmaintain.script.ScriptRunner.implClassName=org.dbmaintain.script.impl.DefaultScriptRunner
# Fully qualified classname of the implementation of org.dbmaintain.script.ScriptParser
org.dbmaintain.script.ScriptParser.implClassName=org.dbmaintain.script.impl.DefaultScriptParser
org.dbmaintain.script.ScriptParser.implClassName.oracle=org.dbmaintain.script.impl.OracleScriptParser
org.dbmaintain.script.ScriptParser.implClassName.oracle9=org.dbmaintain.script.impl.OracleScriptParser
org.dbmaintain.script.ScriptParser.implClassName.oracle10=org.dbmaintain.script.impl.OracleScriptParser
# Set to true if characters can be escaped by using backslashes. For example '\'' instead of the standard SQL way ''''.
# Note this is not standard SQL behavior and is therefore disabled by default.
org.dbmaintain.script.ScriptParser.backSlashEscapingEnabled=false

# If set to true, an implementation of org.dbmaintain.constraints.ConstraintsDisabler will be used to disable
# the foreign key and not null constraints of the unit test database schema.
# The ConstraintsDisabler is configured using the properties specified below. The property with key 'database.dialect'
# specifies which implementation is used.
dbMaintainer.disableConstraints.enabled=true
# Fully qualified classname of the implementation of org.dbmaintain.structure.ConstraintsDisabler
org.dbmaintain.structure.ConstraintsDisabler.implClassName=org.dbmaintain.structure.impl.DefaultConstraintsDisabler

# If set to true, an implementation of org.dbmaintain.sequences.SequenceUpdater will be used to update the
# sequences to a suffiently high value, so that test data can be inserted without problems.
# The SequenceUpdater is configured using the properties specified below. The property with key 'database.dialect'
# specifies which implementation is used.
dbMaintainer.updateSequences.enabled=true
# Fully qualified classname of the implementation of org.dbmaintain.sequences.SequenceUpdater
org.dbmaintain.structure.SequenceUpdater.implClassName=org.dbmaintain.structure.impl.DefaultSequenceUpdater
# Lowest acceptable value of a sequence in a unit test database. The SequenceUpdater will make sure all sequences
# have this value or higher before proceeding
sequenceUpdater.sequencevalue.lowestacceptable=1000

# Fully qualified classname of the implementation of org.dbmaintain.clear.DBClearer
org.dbmaintain.clean.DBClearer.implClassName=org.dbmaintain.clean.impl.DefaultDBClearer
# Fully qualified classname of the implementation of org.dbmaintain.clean.DBCleaner.
org.dbmaintain.clean.DBCleaner.implClassName=org.dbmaintain.clean.impl.DefaultDBCleaner

# Indicates whether the database should be cleaned before data updates are executed by the dbMaintainer. If true, the
# records of all database tables, except the ones listed in 'dbMaintainer.preserve.*' are deleted
dbMaintainer.cleanDb.enabled=true

# Comma separated list of database items that may not be dropped or cleared by the db maintainer when
# updating the database from scratch (dbMaintainer.fromScratch.enabled=true).
# Schemas can also be preserved as a whole. If identifiers are quoted (eg "" for oracle) they are considered
# case sensitive. Items that do not have a schema prefix are considered to be in the default schema
dbMaintainer.preserve.schemas=
dbMaintainer.preserve.tables=
dbMaintainer.preserve.views=
dbMaintainer.preserve.materializedViews=
dbMaintainer.preserve.synonyms=
dbMaintainer.preserve.sequences=

# Comma separated list of table names. The tables listed here will not be emptied when the db maintainer performs a database
# update. This can be used for Tables that contain rather static, read only or type data. The database version table
# is preserved automatically.
# Tables listed here will still be dropped when the db maintainer performs a from scratch update. If this is not desirable
# you should add the tablename to the dbMaintainer.preserve.tables property instead
# Schemas can also be preserved as a whole. If identifiers are quoted (eg "" for oracle) they are considered 
# case sensitive. Items that do not have a schema prefix are considered to be in the default schema
dbMaintainer.preserveDataOnly.schemas=
dbMaintainer.preserveDataOnly.tables=

# If set to true an XSD or DTD will be generated that represents the structure of the database schema. This XSD or DTD can be
# used in datafiles to verify if they are up-to-date and to enable code completion.
dbMaintainer.generateDataSetStructure.enabled=true
# Fully qualified name of the implementation of org.dbmaintain.structure.DataSetStructureGenerator that is used.
